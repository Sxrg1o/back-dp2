name: Backend Tests

on:
  push:
    branches: [ main, dev, fix/* ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      # Servicio de MySQL para pruebas de integraciÃ³n
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
          MYSQL_ROOT_PASSWORD: root_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          DATABASE_URL: "sqlite+aiosqlite://:memory:"
          DATABASE_TEST_URL: "sqlite+aiosqlite://:memory:"
          SECRET_KEY: "test_secret_key_for_testing_only"
          ENVIRONMENT: "test"
        run: |
          pytest tests/ --cov=src --cov-report=xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

      - name: Check test results
        if: ${{ success() }}
        run: echo "All tests passed!"