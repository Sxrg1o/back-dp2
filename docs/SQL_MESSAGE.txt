create table alergeno
(
    id_alergeno        int unsigned auto_increment
        primary key,
    nombre             varchar(100)                                                        not null comment 'Gluten, Lactosa, Mariscos, etc',
    descripcion        text                                                                null,
    icono              varchar(50)                                                         null comment 'Nombre del icono o emoji para UI',
    nivel_riesgo       enum ('bajo', 'medio', 'alto', 'critico') default 'medio'           null,
    activo             tinyint(1)                                default 1                 null,
    fecha_creacion     timestamp                                 default CURRENT_TIMESTAMP null,
    fecha_modificacion timestamp                                 default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    constraint nombre
        unique (nombre)
)
    comment 'Catálogo de alérgenos alimentarios';

create index idx_activo
    on alergeno (activo);

create table categoria
(
    id_categoria      int unsigned auto_increment
        primary key,
    nombre            varchar(100)                         not null,
    descripcion       text                                 null,
    activo            tinyint(1) default 1                 null,
    imagen_path       varchar(255)                         null,
    fecha_creacion    timestamp  default CURRENT_TIMESTAMP null,
    fecha_modificacon timestamp  default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP
)
    comment 'Categorías principales del menú';

create index idx_activo
    on categoria (activo);

create table mesa
(
    id_mesa            int unsigned auto_increment
        primary key,
    numero             varchar(20)                                                                            not null,
    capacidad          int unsigned                                                                           not null,
    zona               varchar(50)                                                                            null comment 'interior, terraza, vip, etc.',
    qr_code            varchar(255)                                                                           not null,
    estado             enum ('disponible', 'ocupada', 'reservada', 'mantenimiento') default 'disponible'      null,
    activa             tinyint(1)                                                   default 1                 null,
    fecha_creacion     timestamp                                                    default CURRENT_TIMESTAMP null,
    fecha_modificacion timestamp                                                    default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    constraint numero
        unique (numero),
    constraint qr_code
        unique (qr_code),
    constraint chk_capacidad
        check (`capacidad` > 0)
)
    comment 'Mesas físicas del restaurante';

create index idx_activa
    on mesa (activa);

create index idx_estado
    on mesa (estado);

create index idx_qr
    on mesa (qr_code);

create index idx_zona
    on mesa (zona);

create table producto
(
    id_producto        int unsigned auto_increment
        primary key,
    id_categoria       int unsigned                         not null,
    nombre             varchar(255)                         not null,
    descripcion        text                                 null,
    precio_base        decimal(10, 2)                       null,
    imagen_path        varchar(255)                         null,
    imagen_alt_text    varchar(255)                         null,
    disponible         tinyint(1) default 1                 null,
    destacado          tinyint(1) default 0                 null,
    fecha_creacion     timestamp  default CURRENT_TIMESTAMP null,
    fecha_modificacion timestamp  default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    constraint producto_ibfk_1
        foreign key (id_categoria) references categoria (id_categoria),
    constraint chk_precio_positivo
        check (`precio_base` > 0)
)
    comment 'Platos disponibles en el menú';

create fulltext index idx_busqueda
    on producto (nombre, descripcion);

create index idx_categoria
    on producto (id_categoria);

create index idx_destacado
    on producto (destacado);

create index idx_disponible
    on producto (disponible);

create index idx_precio
    on producto (precio_base);

create table producto_alergeno
(
    id_producto        int unsigned                                                            not null,
    id_alergeno        int unsigned                                                            not null,
    nivel_presencia    enum ('contiene', 'trazas', 'puede_contener') default 'contiene'        null,
    notas              varchar(255)                                                            null comment 'Información adicional sobre el alérgeno en este producto',
    activo             tinyint(1)                                    default 1                 null,
    fecha_creacon      timestamp                                     default CURRENT_TIMESTAMP null,
    fecha_modificacion timestamp                                     default CURRENT_TIMESTAMP null,
    primary key (id_producto, id_alergeno),
    constraint producto_alergeno_ibfk_1
        foreign key (id_producto) references producto (id_producto)
            on delete cascade,
    constraint producto_alergeno_ibfk_2
        foreign key (id_alergeno) references alergeno (id_alergeno)
)
    comment 'Alérgenos presentes en cada producto';

create index idx_alergeno
    on producto_alergeno (id_alergeno);

create index idx_producto
    on producto_alergeno (id_producto);

create table rol
(
    id_rol             int unsigned auto_increment
        primary key,
    nombre             varchar(50)                         not null,
    descripcion        varchar(255)                        null,
    fecha_creacion     timestamp default CURRENT_TIMESTAMP null,
    fecha_modificacion timestamp default CURRENT_TIMESTAMP null,
    constraint nombre
        unique (nombre)
)
    comment 'Roles del sistema (cliente, mesero, cocina, admin)';

create table tipo_opcion
(
    id_tipo_opcion     int unsigned auto_increment
        primary key,
    codigo             varchar(50)                            not null comment 'nivel_aji, acompanamiento, temperatura',
    nombre             varchar(100)                           not null comment 'Nivel de Ají, Acompañamiento, Temperatura',
    descripcion        varchar(255)                           null,
    activo             tinyint(1)   default 1                 null,
    orden              int unsigned default '0'               null,
    fecha_creacion     timestamp    default CURRENT_TIMESTAMP null,
    fecha_modificacion timestamp    default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    constraint codigo
        unique (codigo)
);

create table producto_opcion
(
    id_producto_opcion int unsigned auto_increment
        primary key,
    id_producto        int unsigned                             not null,
    id_tipo_opcion     int unsigned                             not null,
    nombre             varchar(100)                             not null comment 'Sin ají, Ají suave, Con choclo, Helada',
    precio_adicional   decimal(10, 2) default 0.00              null,
    activo             tinyint(1)     default 1                 null,
    orden              int unsigned   default '0'               null,
    fecha_creacion     timestamp      default CURRENT_TIMESTAMP null,
    fecha_modificacion timestamp      default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    constraint producto_opcion_ibfk_1
        foreign key (id_producto) references producto (id_producto)
            on delete cascade,
    constraint producto_opcion_ibfk_2
        foreign key (id_tipo_opcion) references tipo_opcion (id_tipo_opcion)
);

create index id_tipo_opcion
    on producto_opcion (id_tipo_opcion);

create index idx_producto_tipo
    on producto_opcion (id_producto, id_tipo_opcion);

create table usuario
(
    id_usuario         int unsigned auto_increment
        primary key,
    id_rol             int unsigned                         not null,
    email              varchar(255)                         null,
    password_hash      varchar(255)                         null,
    nombre             varchar(255)                         null,
    telefono           varchar(20)                          null,
    activo             tinyint(1) default 1                 null,
    ultimo_acceso      timestamp                            null,
    fecha_creacion     timestamp  default CURRENT_TIMESTAMP null,
    fecha_modificacion timestamp  default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    constraint email
        unique (email),
    constraint usuarios_ibfk_1
        foreign key (id_rol) references rol (id_rol)
)
    comment 'Usuarios del sistema (staff y clientes registrados)';

create table pedido
(
    id_pedido            int unsigned auto_increment
        primary key,
    id_mesa              int unsigned                                                                                                    not null,
    numero_pedido        varchar(50)                                                                                                     not null,
    estado               enum ('pendiente', 'confirmado', 'en_preparacion', 'listo', 'entregado', 'cancelado') default 'pendiente'       null,
    subtotal             decimal(10, 2)                                                                        default 0.00              not null,
    impuestos            decimal(10, 2)                                                                        default 0.00              null,
    descuentos           decimal(10, 2)                                                                        default 0.00              null,
    total                decimal(10, 2)                                                                        default 0.00              not null,
    notas_cliente        text                                                                                                            null,
    notas_cocina         text                                                                                                            null,
    fecha_confirmado     timestamp                                                                                                       null,
    fecha_en_preparacion timestamp                                                                                                       null,
    fecha_listo          timestamp                                                                                                       null,
    fecha_entregado      timestamp                                                                                                       null,
    fecha_cancelado      timestamp                                                                                                       null,
    fecha_creacion       timestamp                                                                             default CURRENT_TIMESTAMP null,
    fecha_modificacion   timestamp                                                                             default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    creado_por           int unsigned                                                                                                    null,
    modificado_por       int unsigned                                                                                                    null,
    constraint numero_pedido
        unique (numero_pedido),
    constraint pedido_ibfk_3
        foreign key (creado_por) references usuario (id_usuario)
            on delete set null,
    constraint pedido_ibfk_4
        foreign key (modificado_por) references usuario (id_usuario)
            on delete set null,
    constraint pedidos_ibfk_1
        foreign key (id_mesa) references mesa (id_mesa),
    constraint chk_totales_positivos
        check ((`subtotal` >= 0) and (`total` >= 0))
)
    comment 'Pedidos/órdenes del restaurante';

create table division_cuenta
(
    id_division_cuenta int unsigned auto_increment
        primary key,
    id_pedido          int unsigned                               not null,
    tipo_division      enum ('equitativa', 'por_items', 'manual') not null,
    cantidad_personas  int unsigned                               not null,
    notas              text                                       null,
    created_at         timestamp default CURRENT_TIMESTAMP        null,
    updated_at         timestamp default CURRENT_TIMESTAMP        null on update CURRENT_TIMESTAMP,
    constraint division_cuenta_ibfk_1
        foreign key (id_pedido) references pedido (id_pedido)
            on delete cascade,
    constraint chk_cantidad_personas
        check (`cantidad_personas` > 0)
)
    comment 'Configuración de división de cuenta';

create index idx_pedido
    on division_cuenta (id_pedido);

create table pago
(
    id_pago            int unsigned auto_increment
        primary key,
    id_pedido          int unsigned                                                                                     not null,
    id_usuario         int unsigned                                                                                     null comment 'NULL si es anónimo/efectivo',
    persona_numero     int unsigned                                                                                     null comment 'Referencia a división_cuenta_detalle',
    metodo_pago        enum ('efectivo', 'tarjeta', 'yape', 'plin', 'transferencia')                                    not null,
    monto              decimal(10, 2)                                                                                   not null,
    propina            decimal(10, 2)                                                         default 0.00              null,
    total              decimal(10, 2)                                                                                   not null comment 'monto + propina',
    estado             enum ('pendiente', 'procesando', 'completado', 'fallido', 'cancelado') default 'pendiente'       null,
    referencia_externa varchar(255)                                                                                     null comment 'ID de transacción de pasarela',
    notas              text                                                                                             null,
    fecha_procesado    timestamp                                                                                        null,
    fecha_completado   timestamp                                                                                        null,
    fecha_creacion     timestamp                                                              default CURRENT_TIMESTAMP null,
    fecha_modificacion timestamp                                                              default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    constraint pago_ibfk_1
        foreign key (id_pedido) references pedido (id_pedido),
    constraint pago_ibfk_2
        foreign key (id_usuario) references usuario (id_usuario)
            on delete set null,
    constraint chk_montos_positivos
        check ((`monto` >= 0) and (`total` >= 0))
)
    comment 'Pagos realizados por cada persona';

create index id_usuario
    on pago (id_usuario);

create index idx_estado
    on pago (estado);

create index idx_pedido
    on pago (id_pedido);

create index idx_persona
    on pago (persona_numero);

create index created_by
    on pedido (creado_por);

create index idx_created_at
    on pedido (fecha_creacion);

create index idx_estado
    on pedido (estado);

create index idx_mesa
    on pedido (id_mesa);

create index idx_numero
    on pedido (numero_pedido);

create index updated_by
    on pedido (modificado_por);

create table pedido_producto
(
    id_pedido_producto    int unsigned auto_increment
        primary key,
    id_pedido             int unsigned                             not null,
    id_producto           int unsigned                             not null,
    cantidad              int unsigned   default '1'               not null,
    precio_unitario       decimal(10, 2)                           not null comment 'Precio base del producto',
    precio_opciones       decimal(10, 2) default 0.00              null comment 'Suma de opciones adicionales',
    subtotal              decimal(10, 2)                           not null comment 'cantidad * (precio_unitario + precio_opciones)',
    notas_personalizacion text                                     null comment 'Notas libres del cliente',
    fecha_creacion        timestamp      default CURRENT_TIMESTAMP null,
    fecha_modificacion    timestamp      default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,
    constraint pedido_producto_ibfk_1
        foreign key (id_pedido) references pedido (id_pedido)
            on delete cascade,
    constraint pedido_producto_ibfk_2
        foreign key (id_producto) references producto (id_producto)
)
    comment 'Items/productos ordenados en cada pedido';

create table division_cuenta_detalle
(
    id_division_detalle int unsigned auto_increment
        primary key,
    id_division_cuenta  int unsigned                        not null,
    id_pedido_producto  int unsigned                        not null,
    persona_numero      int unsigned                        not null comment 'Identificador de persona (1, 2, 3, etc)',
    monto_asignado      decimal(10, 2)                      not null comment 'Monto que esta persona debe pagar por este item',
    created_at          timestamp default CURRENT_TIMESTAMP null,
    constraint division_cuenta_detalle_ibfk_1
        foreign key (id_division_cuenta) references division_cuenta (id_division_cuenta)
            on delete cascade,
    constraint division_cuenta_detalle_ibfk_2
        foreign key (id_pedido_producto) references pedido_producto (id_pedido_producto)
            on delete cascade,
    constraint chk_monto_asignado
        check (`monto_asignado` >= 0)
)
    comment 'Detalle de qué items paga cada persona';

create index id_pedido_producto
    on division_cuenta_detalle (id_pedido_producto);

create index idx_division
    on division_cuenta_detalle (id_division_cuenta);

create index idx_persona
    on division_cuenta_detalle (persona_numero);

create table pedido_opcion
(
    id_pedido_opcion   int unsigned auto_increment
        primary key,
    id_pedido_producto int unsigned                             not null,
    id_producto_opcion int unsigned                             not null,
    precio_adicional   decimal(10, 2) default 0.00              null comment 'Precio al momento del pedido',
    fecha_creacion     timestamp      default CURRENT_TIMESTAMP null,
    constraint pedido_opcion_ibfk_1
        foreign key (id_pedido_producto) references pedido_producto (id_pedido_producto)
            on delete cascade,
    constraint pedido_opcion_ibfk_2
        foreign key (id_producto_opcion) references producto_opcion (id_producto_opcion)
)
    comment 'Opciones/personalizaciones aplicadas a cada item del pedido';

create index id_producto_opcion
    on pedido_opcion (id_producto_opcion);

create index idx_pedido_item
    on pedido_opcion (id_pedido_producto);

create index id_producto
    on pedido_producto (id_producto);

create index idx_pedido
    on pedido_producto (id_pedido);

create index idx_activo
    on usuario (activo);

create index idx_email
    on usuario (email);

create index idx_rol
    on usuario (id_rol);

