worker_processes 1;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    
    upstream users_backend {
        server 127.0.0.1:8000;
    }
    
    upstream menu_backend {
        server 127.0.0.1:8002;
    }
    
    server {
        listen 80;
        
        # Health check endpoint
        location = /health {
            return 200 'OK';
            add_header Content-Type text/plain;
        }
        
        # Users API - path with proper URI rewriting
        location /api/users/ {
            rewrite ^/api/users/(.*) /$1 break;
            proxy_pass http://users_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
        
        # Menu API - path with proper URI rewriting
        location /api/menu/ {
            rewrite ^/api/menu/(.*) /$1 break;
            proxy_pass http://menu_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
        
        # Custom 404 page for unmatched paths
        location @error_404 {
            return 404 '{"error": "Page not found", "status": 404}';
            add_header Content-Type application/json;
        }
        
        # Root path - redirect to a status page
        location = / {
            return 200 '{"status":"online","services":["users-ms","menu-ms"],"docs":{"/api/users/docs":"Users API Documentation","/api/menu/docs":"Menu API Documentation"}}';
            add_header Content-Type application/json;
        }
        
        # Catch-all for any other undefined routes
        location / {
            try_files $uri @error_404;
        }
    }
}